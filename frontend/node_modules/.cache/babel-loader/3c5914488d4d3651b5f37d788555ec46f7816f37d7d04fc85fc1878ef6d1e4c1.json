{"ast":null,"code":"import { progress } from 'motion-utils';\nconst generateLinearEasing = function (easing, duration) {\n  let resolution = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;\n  let points = \"\";\n  const numPoints = Math.max(Math.round(duration / resolution), 2);\n  for (let i = 0; i < numPoints; i++) {\n    points += easing(progress(0, numPoints - 1, i)) + \", \";\n  }\n  return `linear(${points.substring(0, points.length - 2)})`;\n};\nexport { generateLinearEasing };","map":{"version":3,"names":["progress","generateLinearEasing","easing","duration","resolution","points","numPoints","Math","max","round","i","substring","length"],"sources":["C:/Users/Kevin/OneDrive/Documents/Gallery APP/frontend/node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs"],"sourcesContent":["import { progress } from 'motion-utils';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,cAAc;AAEvC,MAAMC,oBAAoB,GAAG,UAACC,MAAM,EAAEC,QAAQ,EAEzC;EAAA,IADLC,UAAU,uEAAG,EAAE;EAEX,IAAIC,MAAM,GAAG,EAAE;EACf,MAAMC,SAAS,GAAGC,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,KAAK,CAACN,QAAQ,GAAGC,UAAU,CAAC,EAAE,CAAC,CAAC;EAChE,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,SAAS,EAAEI,CAAC,EAAE,EAAE;IAChCL,MAAM,IAAIH,MAAM,CAACF,QAAQ,CAAC,CAAC,EAAEM,SAAS,GAAG,CAAC,EAAEI,CAAC,CAAC,CAAC,GAAG,IAAI;EAC1D;EACA,OAAQ,UAASL,MAAM,CAACM,SAAS,CAAC,CAAC,EAAEN,MAAM,CAACO,MAAM,GAAG,CAAC,CAAE,GAAE;AAC9D,CAAC;AAED,SAASX,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}